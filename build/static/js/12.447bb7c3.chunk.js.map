{"version":3,"sources":["Views/Login/Login.js","FirebaseApp/index.js","Components/Button.js","Components/CustomTextField.js"],"names":["Login","setUser","useState","error","setError","history","useHistory","useFormik","initialValues","email","password","validationSchema","yup","shape","typeError","required","onSubmit","vals","onSuccess","onError","firebase","auth","signInWithEmailAndPassword","then","userCredential","user","database","ref","get","snap","finalUser","val","uid","isAdmin","catch","login","push","er","message","values","errors","submitCount","handleSubmit","handleChange","useEffect","className","style","left","top","background","href","src","Logo","width","name","helperText","value","onChange","label","type","color","height","opacity","maxWidth","textAlign","cursor","onClick","initializeApp","config","useStyles","makeStyles","button","backgroundColor","_Button","props","classes","variant","size","fullWidth","root","borderColor","CustomTextField","rest","spellCheck","FormHelperTextProps","position","right","InputProps","InputLabelProps"],"mappings":"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","file":"static/js/12.447bb7c3.chunk.js","sourcesContent":["import \"../../Styles/css/login.css\";\r\nimport Logo from \"Assets/images/logo/logo2r.png\";\r\nimport CustomTextField from \"Components/CustomTextField\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"Components/Button\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport firebase from \"FirebaseApp\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst login = ({ email, password, onSuccess, onError }) => {\r\n  firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      // Signed inas\r\n      var user = userCredential.user;\r\n\r\n      const db = firebase.database();\r\n      db.ref(`admin`)\r\n        .get()\r\n        .then((snap) => {\r\n          let finalUser = { ...user };\r\n          if (snap.val() === user.uid) {\r\n            finalUser.isAdmin = true;\r\n          }\r\n          onSuccess(finalUser);\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      onError(error);\r\n    });\r\n};\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n  const { values, errors, submitCount, handleSubmit, handleChange } = useFormik({\r\n    initialValues: { email: \"\", password: \"\" },\r\n    validationSchema: yup.object().shape({\r\n      email: yup.string().email().typeError(\"Invalid format\").required(\"Required\"),\r\n      password: yup.string().required(\"Required\"),\r\n    }),\r\n    onSubmit: (vals) => {\r\n      const onSuccess = (user) => {\r\n        setUser(user);\r\n        if (user.isAdmin) {\r\n          history.push(\"/admin\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      };\r\n      const onError = (er) => {\r\n        setError(er.message);\r\n      };\r\n      login({ ...vals, onSuccess, onError });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setError(null);\r\n  }, [submitCount]);\r\n\r\n  return (\r\n    <div className=\"position-fixed w-100 h-100 d-flex overflow-auto\" style={{ left: 0, top: 0 }}>\r\n      <div\r\n        className=\"position-absolute w-100 h-100 d-block d-sm-none\"\r\n        style={{ left: 0, top: 0, background: \"black\" }}\r\n      ></div>\r\n      <form onSubmit={handleSubmit} className=\"login-container p-5 m-auto position-relative\">\r\n        <div className=\"d-flex justify-content-center mb-5 pb-4\">\r\n          <a href=\"/\">\r\n            <img src={Logo} className=\"mx-auto\" width={198}></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"px-sm-4\">\r\n          <div className=\"mb-4\">\r\n            <CustomTextField\r\n              name=\"email\"\r\n              error={submitCount > 0 && errors[\"email\"]}\r\n              helperText={errors[\"email\"]}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              color=\"white\"\r\n            ></CustomTextField>\r\n          </div>\r\n          <div>\r\n            <CustomTextField\r\n              name=\"password\"\r\n              error={submitCount > 0 && errors[\"password\"]}\r\n              helperText={errors[\"password\"]}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              color=\"white\"\r\n            ></CustomTextField>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: 75, opacity: error ? 1 : 0 }}\r\n          className=\"d-flex align-items-end text-danger p-4\"\r\n        >\r\n          {error}\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mb-3\">\r\n          <div style={{ maxWidth: 230, width: \"100%\" }}>\r\n            <Button type=\"submit\">Login</Button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ color: \"white\", textAlign: \"center\", cursor: \"pointer\" }}\r\n          onClick={() => history.push(\"/signup\")}\r\n        >\r\n          Create account\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import firebase from \"firebase\";\r\nimport config from \"./config.json\";\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    background: \"#ffbd1b\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#DAA520\",\r\n      color: \"#FFF\",\r\n    },\r\n  },\r\n});\r\n\r\nconst _Button = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      className={classes.button}\r\n      size={props.size ? props.size : \"large\"}\r\n      fullWidth\r\n      {...props}\r\n    ></Button>\r\n  );\r\n};\r\n\r\nexport default _Button;\r\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#ffbd1b\",\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#ffbd1b\",\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#ffbd1b\",\n    },\n    \"& .MuiInputLabel-outlined.Mui-focused\": {\n      color: (props) => props.color,\n    },\n  },\n});\n\nconst CustomTextField = ({ label, value, onChange, color = \"black\", ...rest }) => {\n  const classes = useStyles({ color });\n  return (\n    <TextField\n      {...rest}\n      spellCheck={false}\n      variant=\"outlined\"\n      label={label}\n      fullWidth\n      className={classes.root}\n      FormHelperTextProps={{\n        style: {\n          position: \"absolute\",\n          right: 0,\n        },\n      }}\n      InputProps={{\n        style: {\n          color,\n        },\n      }}\n      InputLabelProps={{\n        style: { color },\n      }}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default CustomTextField;\n"],"sourceRoot":""}