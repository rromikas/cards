[{"C:\\Users\\rromi\\cards\\src\\index.js":"1","C:\\Users\\rromi\\cards\\src\\App.js":"2","C:\\Users\\rromi\\cards\\src\\Routes\\MenuItem.js":"3","C:\\Users\\rromi\\cards\\src\\Components\\NavigationMenu.js":"4","C:\\Users\\rromi\\cards\\src\\Routes\\Routes.js":"5","C:\\Users\\rromi\\cards\\src\\Views\\Work\\Work.js":"6","C:\\Users\\rromi\\cards\\src\\Views\\Order\\Order.js":"7","C:\\Users\\rromi\\cards\\src\\Views\\LandingPage\\Home.js":"8","C:\\Users\\rromi\\cards\\src\\Views\\Gallery\\Gallery.js":"9","C:\\Users\\rromi\\cards\\src\\Views\\Contact\\Contact.js":"10","C:\\Users\\rromi\\cards\\src\\Views\\Faq\\Faq.js":"11","C:\\Users\\rromi\\cards\\src\\Views\\Order\\ControlPanel.js":"12","C:\\Users\\rromi\\cards\\src\\Components\\FrontCard.js":"13","C:\\Users\\rromi\\cards\\src\\Components\\BackCard.js":"14","C:\\Users\\rromi\\cards\\src\\Views\\Gallery\\InstaGallery.js":"15","C:\\Users\\rromi\\cards\\src\\Data\\work.js":"16","C:\\Users\\rromi\\cards\\src\\Data\\faq.js":"17","C:\\Users\\rromi\\cards\\src\\Components\\ToggleImage.js":"18","C:\\Users\\rromi\\cards\\src\\Components\\ToggleButton.js":"19","C:\\Users\\rromi\\cards\\src\\Components\\ToggleBorder.js":"20","C:\\Users\\rromi\\cards\\src\\Components\\CustomTextField.js":"21","C:\\Users\\rromi\\cards\\src\\Components\\CustomizeItem.js":"22","C:\\Users\\rromi\\cards\\src\\Views\\Order\\Invoice.js":"23","C:\\Users\\rromi\\cards\\src\\Helper\\checkCardName.js":"24","C:\\Users\\rromi\\cards\\src\\Views\\Order\\CheckoutModal.js":"25","C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Admin.js":"26","C:\\Users\\rromi\\cards\\src\\Views\\Login\\Login.js":"27","C:\\Users\\rromi\\cards\\src\\Components\\Button.js":"28","C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Menu.js":"29","C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Metals.js":"30","C:\\Users\\rromi\\cards\\src\\Components\\ResourceCard.js":"31","C:\\Users\\rromi\\cards\\src\\Views\\Signup\\Signup.js":"32","C:\\Users\\rromi\\cards\\src\\FirebaseApp\\index.js":"33","C:\\Users\\rromi\\cards\\src\\Helper\\firebase.js":"34","C:\\Users\\rromi\\cards\\src\\Components\\Dropzone.js":"35","C:\\Users\\rromi\\cards\\src\\Components\\Confirm.js":"36","C:\\Users\\rromi\\cards\\src\\Components\\OutlinedButton.js":"37","C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Borders.js":"38","C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Discounts.js":"39","C:\\Users\\rromi\\cards\\src\\Components\\DiscountCard.js":"40","C:\\Users\\rromi\\cards\\src\\Components\\DayPicker.js":"41","C:\\Users\\rromi\\cards\\src\\Helper\\instagram.js":"42","C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Instagram.js":"43","C:\\Users\\rromi\\cards\\src\\Views\\Contact\\Form.js":"44","C:\\Users\\rromi\\cards\\src\\Services\\index.js":"45","C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Navbar.js":"46"},{"size":333,"mtime":1617734232658,"results":"47","hashOfConfig":"48"},{"size":860,"mtime":1618263670505,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1617756439224,"results":"50","hashOfConfig":"48"},{"size":865,"mtime":1617743020274,"results":"51","hashOfConfig":"48"},{"size":985,"mtime":1617740438028,"results":"52","hashOfConfig":"48"},{"size":1100,"mtime":1617712795197,"results":"53","hashOfConfig":"48"},{"size":1247,"mtime":1617751908697,"results":"54","hashOfConfig":"48"},{"size":1905,"mtime":1617712795115,"results":"55","hashOfConfig":"48"},{"size":1870,"mtime":1618276026385,"results":"56","hashOfConfig":"48"},{"size":1577,"mtime":1618404479910,"results":"57","hashOfConfig":"48"},{"size":1532,"mtime":1617712795169,"results":"58","hashOfConfig":"48"},{"size":5704,"mtime":1618263948868,"results":"59","hashOfConfig":"48"},{"size":2487,"mtime":1617752358124,"results":"60","hashOfConfig":"48"},{"size":1719,"mtime":1617712794614,"results":"61","hashOfConfig":"48"},{"size":1993,"mtime":1618272751058,"results":"62","hashOfConfig":"48"},{"size":803,"mtime":1617712794716,"results":"63","hashOfConfig":"48"},{"size":8747,"mtime":1618267763353,"results":"64","hashOfConfig":"48"},{"size":1538,"mtime":1617752130010,"results":"65","hashOfConfig":"48"},{"size":1440,"mtime":1617712794664,"results":"66","hashOfConfig":"48"},{"size":1504,"mtime":1617752244388,"results":"67","hashOfConfig":"48"},{"size":1237,"mtime":1617756300823,"results":"68","hashOfConfig":"48"},{"size":3972,"mtime":1617712794514,"results":"69","hashOfConfig":"48"},{"size":2545,"mtime":1617712795275,"results":"70","hashOfConfig":"48"},{"size":339,"mtime":1617712794772,"results":"71","hashOfConfig":"48"},{"size":5791,"mtime":1617712795298,"results":"72","hashOfConfig":"48"},{"size":2061,"mtime":1618415215991,"results":"73","hashOfConfig":"48"},{"size":3893,"mtime":1617788429077,"results":"74","hashOfConfig":"48"},{"size":579,"mtime":1617749690195,"results":"75","hashOfConfig":"48"},{"size":1167,"mtime":1618410617601,"results":"76","hashOfConfig":"48"},{"size":2050,"mtime":1618415225907,"results":"77","hashOfConfig":"48"},{"size":3677,"mtime":1617757407979,"results":"78","hashOfConfig":"48"},{"size":4712,"mtime":1617789524449,"results":"79","hashOfConfig":"48"},{"size":134,"mtime":1617742085832,"results":"80","hashOfConfig":"48"},{"size":1334,"mtime":1618271049981,"results":"81","hashOfConfig":"48"},{"size":959,"mtime":1617747252217,"results":"82","hashOfConfig":"48"},{"size":1388,"mtime":1617749962308,"results":"83","hashOfConfig":"48"},{"size":585,"mtime":1617749716984,"results":"84","hashOfConfig":"48"},{"size":2106,"mtime":1618415242134,"results":"85","hashOfConfig":"48"},{"size":2122,"mtime":1618415237400,"results":"86","hashOfConfig":"48"},{"size":4612,"mtime":1617756674997,"results":"87","hashOfConfig":"48"},{"size":1308,"mtime":1617755580827,"results":"88","hashOfConfig":"48"},{"size":223,"mtime":1618273768343,"results":"89","hashOfConfig":"48"},{"size":4451,"mtime":1618415231759,"results":"90","hashOfConfig":"48"},{"size":3068,"mtime":1618409114533,"results":"91","hashOfConfig":"48"},{"size":748,"mtime":1618407069919,"results":"92","hashOfConfig":"48"},{"size":515,"mtime":1618411333540,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"63yss5",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rromi\\cards\\src\\index.js",[],["203","204"],"C:\\Users\\rromi\\cards\\src\\App.js",["205"],"import React, { Suspense, useEffect } from \"react\";\nimport NavigationMenu from \"./Components/NavigationMenu\";\nimport \"./Styles/css/main.css\";\nimport { menuItem } from \"./Routes/MenuItem\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Routes } from \"./Routes/Routes\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  return (\n    <div id=\"App\">\n      <NavigationMenu menu={menuItem} />\n      <div id=\"page-wrap\">\n        <Suspense fallback={<div className=\"loading\">Loading...</div>}>\n          <Switch>\n            {Routes.map((item) => (\n              <Route exact path={item.pathname}>\n                <item.component setUser={setUser} user={user}></item.component>\n              </Route>\n            ))}\n          </Switch>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\rromi\\cards\\src\\Routes\\MenuItem.js",[],"C:\\Users\\rromi\\cards\\src\\Components\\NavigationMenu.js",[],"C:\\Users\\rromi\\cards\\src\\Routes\\Routes.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Work\\Work.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Order\\Order.js",["206","207","208"],"import React, { useEffect, useState } from \"react\";\nimport \"../../Styles/css/order.css\";\nimport FrontCard from \"../../Components/FrontCard\";\nimport BackCard from \"../../Components/BackCard\";\nimport ControlPanel from \"./ControlPanel\";\nimport M1 from \"../../Assets/images/card/m1.jpg\";\nimport M2 from \"../../Assets/images/card/m2.jpg\";\nimport M3 from \"../../Assets/images/card/m3.jpg\";\nimport M4 from \"../../Assets/images/card/m4.jpg\";\n\nfunction Order() {\n  const [customCard, setCustomCard] = useState();\n  const [activeBackground, setActiveBackground] = useState();\n\n  const handleValue = (value) => {\n    setCustomCard(value);\n  };\n\n  useEffect(() => {\n    if (customCard && customCard.backgroundIndicator) {\n      const back = customCard.backgroundIndicator;\n\n      setActiveBackground(back);\n    }\n  }, [customCard]);\n\n  console.log(\"From Abba\", customCard);\n  return (\n    <div className=\"row order-container\">\n      <div className=\"col-md-5\">\n        <FrontCard data={customCard} background={activeBackground || M2} />\n        <BackCard data={customCard} background={activeBackground || M2} />\n      </div>\n      <div className=\"col-md-7\">\n        <ControlPanel getValue={handleValue} />\n      </div>\n    </div>\n  );\n}\n\nexport default Order;\n","C:\\Users\\rromi\\cards\\src\\Views\\LandingPage\\Home.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Gallery\\Gallery.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Contact\\Contact.js",["209","210","211"],"import React from \"react\";\nimport \"../../Styles/css/contact.css\";\nimport { AiOutlineMail } from \"react-icons/ai\";\nimport { FiInstagram, FiFacebook, FiTwitter } from \"react-icons/fi\";\nimport Form from \"./Form\";\n\nfunction Contact() {\n  const [openForm, setOpenForm] = React.useState(false);\n  return (\n    <div className=\"row contact-container\">\n      <div className=\"col-md-5 contact-left\">\n        <div className=\"contact-header\">Contact</div>\n      </div>\n      <div className=\"col-md-7 contact-right\">\n        <div className=\"outro\">\n          Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print,\n          graphic or web designs. The passage is attributed to an unknown typesetter in the 15th\n          century who is thought to have scrambled parts of Cicero's De Finibus Bonorum et Malorum\n          for use in a type specimen book.\n        </div>\n\n        <div className=\"social-div\">\n          <a href=\"https://www.instagram.com/ucardelite/\" target=\"_blank\">\n            <FiInstagram className=\"social-icon\" />\n          </a>\n          <a href=\"https://www.facebook.com/ucardelite\" target=\"_blank\">\n            <FiFacebook className=\"social-icon\" />\n          </a>\n          <a href=\"https://twitter.com/EliteUcard\" target=\"_blank\">\n            <FiTwitter className=\"social-icon\" />\n          </a>\n          <AiOutlineMail onClick={() => setOpenForm(true)} className=\"social-icon\" />\n          <Form open={openForm} handleClose={() => setOpenForm(false)}></Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","C:\\Users\\rromi\\cards\\src\\Views\\Faq\\Faq.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Order\\ControlPanel.js",["212"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport CustomTextField from \"../../Components/CustomTextField\";\nimport ToggleButtonContainer from \"../../Components/ToggleButton\";\nimport \"../../Styles/css/controlpanel.css\";\nimport ToggleImage from \"../../Components/ToggleImage\";\nimport ToggleBorder from \"../../Components/ToggleBorder\";\nimport CustomizeItem from \"../../Components/CustomizeItem\";\nimport Invoice from \"./Invoice\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ControlPanel({ getValue }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const [invoiceItem, setInvoiceItem] = React.useState();\n\n  const [controlValue, setControlValue] = useState({\n    primaryName: \"\",\n    cardNumberPosition: \"front\",\n    cardNumberType: \"visa\",\n    borderIndicator: \"\",\n    customText: \"\",\n    textSize: null,\n    backgroundIndicator: \"\",\n    logo: null,\n    logoWidth: null,\n    logoHeight: null,\n  });\n\n  useEffect(() => {\n    setInvoiceItem({\n      border: controlValue.borderIndicator,\n    });\n  }, [controlValue]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    if (getValue) {\n      getValue(controlValue);\n    }\n  }, [controlValue, setControlValue]);\n\n  const ChipPositionData = [\n    { value: \"front\", label: \"Front\" },\n    { value: \"back\", label: \"Back\" },\n  ];\n\n  const ChipTypeData = [\n    { value: \"visa\", label: \"Visa\" },\n    { value: \"master\", label: \"Master Card\" },\n  ];\n\n  const handleOptions = (value) => {\n    if (value) {\n      setControlValue({\n        ...controlValue,\n        cardNumberPosition: value,\n      });\n    }\n  };\n\n  const handleOptionsType = (value) => {\n    if (value) {\n      setControlValue({\n        ...controlValue,\n        cardNumberType: value,\n      });\n    }\n  };\n\n  const handleBorderToggle = (value) => {\n    if (value) {\n      setControlValue({\n        ...controlValue,\n        borderIndicator: value,\n      });\n    }\n  };\n\n  const handleBackGround = (value) => {\n    if (value) {\n      setControlValue({\n        ...controlValue,\n        backgroundIndicator: value,\n      });\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Edit Card Info\" {...a11yProps(0)} />\n          <Tab label=\"Choose Metal\" {...a11yProps(1)} />\n          <Tab label=\"Choose Border\" {...a11yProps(2)} />\n          <Tab label=\"Add Logo/Text\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0} dir={theme.direction}>\n        <CustomTextField\n          label=\"Add Name\"\n          value={controlValue.primaryName}\n          onChange={(e) => setControlValue({ ...controlValue, primaryName: e.target.value })}\n        />\n        <div className=\"row\">\n          <div className=\"col-md-12 control-options\">\n            <span className=\"control-options-lebel-text\">Card Number On</span>\n            <ToggleButtonContainer\n              data={ChipPositionData}\n              getOptions={handleOptions}\n              defaultValue={controlValue.cardNumberPosition}\n            />\n          </div>\n          <div className=\"col-md-12 control-options\">\n            <span className=\"control-options-lebel-text\">Card Type</span>\n            <ToggleButtonContainer\n              data={ChipTypeData}\n              defaultValue={controlValue.cardNumberType}\n              getOptionsType={handleOptionsType}\n            />\n          </div>\n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={1} dir={theme.direction}>\n        <ToggleImage getBackground={handleBackGround} />\n      </TabPanel>\n      <TabPanel value={value} index={2} dir={theme.direction}>\n        <ToggleBorder getValue={handleBorderToggle} />\n      </TabPanel>\n      <TabPanel value={value} index={3} dir={theme.direction}>\n        <CustomizeItem\n          textSize={controlValue.textSize}\n          customText={controlValue.customText}\n          customImage={controlValue.logo}\n          customImageWidth={controlValue.logoWidth}\n          customImageHeight={controlValue.logoHeight}\n          getValue={(value) =>\n            value &&\n            setControlValue({\n              ...controlValue,\n              customText: value.customText,\n              textSize: value.textSize,\n              logo: value.logo,\n              logoWidth: value.logoWidth,\n              logoHeight: value.logoHeight,\n            })\n          }\n        />\n      </TabPanel>\n      <hr></hr>\n      <Invoice data={invoiceItem} />\n    </div>\n  );\n}\n","C:\\Users\\rromi\\cards\\src\\Components\\FrontCard.js",["213","214","215","216","217"],"import React, { useEffect } from \"react\";\nimport \"../Styles/css/card.css\";\nimport { RiVisaLine, RiMastercardFill } from \"react-icons/ri\";\nimport Draggable from \"react-draggable\";\nimport B1 from \"../Assets/images/border/b1.png\";\nimport B2 from \"../Assets/images/border/b2.png\";\n\nfunction FrontCard({ data, background }) {\n  const [state, setState] = React.useState({\n    activeDrags: 0,\n  });\n\n  const onStart = () => {\n    setState({ activeDrags: ++state.activeDrags });\n  };\n\n  const onStop = () => {\n    setState({ activeDrags: --state.activeDrags });\n  };\n\n  const dragHandlers = { onStart: onStart, onStop: onStop };\n\n  let divStyle = {\n    backgroundImage: \"url(\" + background + \")\",\n    backgroundSize: \"cover\",\n  };\n\n  let imageStyle = {\n    position: \"absolute\",\n    height: `${data?.logoHeight}px`,\n    width: `${data?.logoWidth}px`,\n  };\n\n  return (\n    <div className=\"card-container\" style={divStyle}>\n      <Draggable {...dragHandlers}>\n        <img src={data && data?.logo} style={imageStyle} />\n      </Draggable>\n      <div className=\"card-portion\">\n        {data && data.customText && (\n          <>\n            <Draggable {...dragHandlers}>\n              <div className=\"custom-text-last\" style={{ fontSize: `${data.textSize + \"px\"}` }}>\n                {data.customText}\n              </div>\n            </Draggable>\n          </>\n        )}\n      </div>\n      <div className=\"card-portion\">\n        <span className=\"small-chip\"></span>\n      </div>\n      <div className=\"card-portion card-number\">\n        {data?.cardNumberPosition === \"front\" && (\n          <>\n            <Draggable {...dragHandlers}>\n              <div>7777 7777 7777 7777</div>\n            </Draggable>\n            <Draggable {...dragHandlers}>\n              <div>Valid 77/77</div>\n            </Draggable>\n          </>\n        )}\n      </div>\n      <div className=\"card-portion name-type-portion\">\n        <Draggable {...dragHandlers}>\n          <div>{data?.primaryName || \"(Name Here)\"}</div>\n        </Draggable>\n        <Draggable {...dragHandlers}>\n          <div>\n            {data && data.cardNumberType === \"visa\" ? (\n              <RiVisaLine className=\"card-type-icon\" />\n            ) : (\n              <RiMastercardFill className=\"card-type-icon\" />\n            )}\n          </div>\n        </Draggable>\n      </div>\n      {data && data.borderIndicator ? (\n        <img src={data.borderIndicator} className=\"img-border\" />\n      ) : null}\n    </div>\n  );\n}\n\nexport default FrontCard;\n","C:\\Users\\rromi\\cards\\src\\Components\\BackCard.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Gallery\\InstaGallery.js",["218","219","220"],"import React, { Component } from \"react\";\n\nconst InstaGallery = ({ accessToken }) => {\n  const [photos, setPhotos] = React.useState([]);\n  React.useEffect(() => {\n    (async () => {\n      try {\n        // const response = await fetch(\n        //   `https://www.instagram.com/graphql/query?query_id=17888483320059182&variables={\"id\":\"${this.props.userId}\",\"first\":${this.props.photoCount},\"after\":null}`\n        // );\n        // const { data } = await response.json();\n        // console.log(\"Data\", data);\n        // const photos = data.user.edge_owner_to_timeline_media.edges.map(({ node }) => {\n        //   const { id } = node;\n        //   const caption = node.edge_media_to_caption.edges[0].node.text;\n        //   const thumbnail = node.thumbnail_resources.find(\n        //     (thumbnail) => thumbnail.config_width === this.props.thumbnailWidth\n        //   );\n        //   const { src, config_width: width, config_height: height } = thumbnail;\n        //   const url = `https://www.instagram.com/p/${node.shortcode}`;\n        //   return {\n        //     id,\n        //     caption,\n        //     src,\n        //     width,\n        //     height,\n        //     url,\n        //   };\n        // });\n        if (accessToken) {\n          const response = await fetch(\n            `https://graph.instagram.com/me/media?access_token=${accessToken}&fields=media_url,media_type,caption,permalink`\n          ).then((x) => x.json());\n          if (response.data) {\n            setPhotos(response.data.map((x) => ({ url: x.permalink, src: x.media_url })));\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [accessToken]);\n\n  return (\n    <div className=\"photos\">\n      {photos.length\n        ? photos.map(({ src, url }, i) => (\n            <a href={url} target=\"_blank\" key={`insta-mediaObj-${i}`}>\n              <img className=\"photo\" src={src} />\n            </a>\n          ))\n        : null}\n    </div>\n  );\n};\n\nexport default InstaGallery;\n","C:\\Users\\rromi\\cards\\src\\Data\\work.js",[],"C:\\Users\\rromi\\cards\\src\\Data\\faq.js",[],"C:\\Users\\rromi\\cards\\src\\Components\\ToggleImage.js",["221","222","223"],"import React, { useEffect, useState } from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { useObjectVal } from \"react-firebase-hooks/database\";\nimport { getDbRef } from \"Helper/firebase\";\n\nconst TogglemImage = ({ getBackground }) => {\n  const [metals, loading, error] = useObjectVal(getDbRef(\"metals\"));\n\n  const resources = metals ? metals : {};\n\n  const [groupValue, setGroupValue] = useState();\n  console.log(\"888\", groupValue);\n  const handleChange = (_event, value) => {\n    if (value) {\n      setGroupValue(value);\n    }\n  };\n\n  useEffect(() => {\n    if (getBackground) {\n      getBackground(groupValue);\n    }\n  }, [groupValue, setGroupValue]);\n\n  return (\n    <ToggleButtonGroup\n      size=\"large\"\n      value={groupValue}\n      exclusive\n      onChange={handleChange}\n      className=\"toggle-Image\"\n    >\n      {Object.keys(resources)\n        .filter((x) => resources[x].image !== \"empty\")\n        .map((x, i) => (\n          <ToggleButton\n            key={`metal-option-${i}`}\n            value={resources[x].image}\n            aria-label=\"left aligned\"\n            className=\"toggle-image-item bg-cover\"\n            style={{\n              backgroundImage: `url(${resources[x].image})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n            }}\n          >\n            +{resources[x].price}$\n          </ToggleButton>\n        ))}\n    </ToggleButtonGroup>\n  );\n};\n\nexport default TogglemImage;\n","C:\\Users\\rromi\\cards\\src\\Components\\ToggleButton.js",["224","225","226","227","228"],"import React, { useEffect } from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    toggle: {\n        outlineColor: '#EFE436', \n        outlineWidth: '1px', \n        outlineStyle: 'solid',\n        color : \"black\"\n    },\n  }));\n\n\nconst ToggleButtonContainer = ({data , getOptions , defaultValue , getOptionsType}) => {\n    const classes = useStyles()\n    const [groupValue, setGroupValue] = React.useState();\n\n    const handleChange = (e, value) => {\n        if(value){\n            setGroupValue(value)\n        }\n    };\n\n    useEffect(()=>{\n        if(getOptionsType){\n            getOptionsType(groupValue)\n        }\n\n    },[,groupValue,setGroupValue])\n\n    useEffect(()=>{\n        if(getOptions){\n            getOptions(groupValue)\n        }\n    },[,groupValue, setGroupValue])\n\n\n    return (\n        <ToggleButtonGroup size=\"large\" value={defaultValue} exclusive onChange={handleChange}>\n            {            \n                data.map((item)=>(\n                    <ToggleButton value = {item.value}  aria-label=\"left aligned\" className={classes.toggle}>\n                        {item.label}\n                    </ToggleButton>\n                ))\n            }\n        </ToggleButtonGroup>\n    )\n}\n\nexport default ToggleButtonContainer\n","C:\\Users\\rromi\\cards\\src\\Components\\ToggleBorder.js",["229","230","231","232","233","234","235"],"import React, { useEffect } from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport B1 from \"../Assets/images/border/b1.png\";\nimport B2 from \"../Assets/images/border/b2.png\";\nimport { useObjectVal } from \"react-firebase-hooks/database\";\nimport { getDbRef } from \"Helper/firebase\";\n\nconst ToggleBorder = ({ getValue }) => {\n  const [metals, loading, error] = useObjectVal(getDbRef(\"borders\"));\n  const resources = metals ? metals : {};\n\n  const [groupValue, setGroupValue] = React.useState();\n\n  const handleChange = (_event, value) => {\n    if (value) {\n      setGroupValue(value);\n    }\n  };\n\n  useEffect(() => {\n    if (getValue) {\n      getValue(groupValue);\n    }\n  }, [, groupValue, setGroupValue]);\n\n  return (\n    <ToggleButtonGroup\n      size=\"large\"\n      value={groupValue}\n      exclusive\n      onChange={handleChange}\n      className=\"toggle-border\"\n    >\n      {Object.keys(resources)\n        .filter((x) => resources[x].image !== \"empty\")\n        .map((x, i) => (\n          <ToggleButton\n            key={`border-option-${i}`}\n            value={resources[x].image}\n            aria-label=\"left aligned\"\n            className=\"border-toggle-item\"\n          >\n            <img src={resources[x].image} className=\"img-border\" />\n            <div className=\"border-price\">+{resources[x].price}$</div>\n          </ToggleButton>\n        ))}\n    </ToggleButtonGroup>\n  );\n};\n\nexport default ToggleBorder;\n","C:\\Users\\rromi\\cards\\src\\Components\\CustomTextField.js",[],"C:\\Users\\rromi\\cards\\src\\Components\\CustomizeItem.js",["236"],"import React,{useState , useEffect} from 'react'\nimport Slider from '@material-ui/core/Slider';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport CustomTextField from './CustomTextField'\n\nfunction CustomizeItem({getValue, customText , textSize , customImage, customImageHeight , customImageWidth}) {\n    const [state,setState] = useState({\n        customText : customText || \"\",\n        textSize : textSize || 20,\n        logo: customImage || null,\n        logoWidth : customImageWidth || 100,\n        logoHeight : customImageHeight || 100,\n    })\n\n    const [imageContol,setImageControl] = useState(false)\n\n    const handleFontSize = (e , value) =>{\n        setState({\n            ...state,\n            textSize : value\n        })\n    }\n\n    useEffect(()=>{\n        if(customImage){\n            setImageControl(true)\n        }\n    },[customImage])\n\n    useEffect(()=>{\n        if(getValue){\n            getValue(state)\n        }\n    },[state,setState])\n\n    const handleCustomText = (e) =>{\n        setState({\n            ...state,\n            customText : e.target.value\n        })\n    }\n\n    const handleImageWidth = (e , value) =>{\n        setState({\n            ...state,\n            logoWidth : value\n        })\n    }\n\n    const handleImageHeight = (e, value) =>{\n        setState({\n            ...state,\n            logoHeight : value\n        })\n    }\n\n    const handleImage = (e) =>{\n        const image = e.target.files[0]\n        const imageUrl = URL.createObjectURL(image)\n        setState({\n            ...state,\n            logo : imageUrl\n        })\n        setImageControl(true)\n    }\n\n    const handleRemoveLogo = () =>{\n        setState({\n            ...state,\n            logo : null\n        })\n        setImageControl(false)\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <input\n                    accept=\"image/*\"\n                    style={{display : \"none\"}}\n                    id=\"contained-button-file\"\n                    type=\"file\"\n                    onChange={handleImage}\n                />\n                <label htmlFor=\"contained-button-file\" className=\"col-md-12\">\n                    <Button variant=\"outlined\" size=\"large\" fullWidth style={{color : \"#333\"}} component=\"span\">\n                        Upload Logo\n                    </Button>\n                </label>\n                {\n                    imageContol &&\n                    <>\n                    <div className=\"row image-control\">\n                        <div className=\"col-md-6\">\n                            <Typography  gutterBottom>Width</Typography>\n                            <Slider max=\"200\" aria-label=\"custom thumb label\" defaultValue={100} color=\"primary\" onChange={handleImageWidth}/>\n\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Typography  gutterBottom>Height</Typography>\n                            <Slider max=\"200\" aria-label=\"custom thumb label\" defaultValue={100} color=\"primary\" onChange={handleImageHeight}/>\n                        </div>\n                    </div>\n                    <div className=\"row image-control justify-content-end\">\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleRemoveLogo}>Remove Logo</Button>\n                    </div>\n                    </>\n                }\n            </div>\n            <div className=\"col-md-12 custom-text\">\n                    <CustomTextField label=\"Add Custom Text\" value={customText} onChange={handleCustomText}/>   \n            </div>\n            <div className=\"col-md-12 custom-text\">\n                    <Typography  gutterBottom>Font Size</Typography>\n                    <Slider max=\"80\" aria-label=\"custom thumb label\" defaultValue={20} color=\"primary\" onChange={handleFontSize}/>\n            </div>\n        </div>\n    )\n}\n\nexport default CustomizeItem\n","C:\\Users\\rromi\\cards\\src\\Views\\Order\\Invoice.js",[],"C:\\Users\\rromi\\cards\\src\\Helper\\checkCardName.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Order\\CheckoutModal.js",["237"],"import React,{useState,useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport '../../Styles/css/dialog.css'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    pay : {\n      background : \"#ffbd1b\",\n      color : \"#fff\",\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      '&:hover': {\n        backgroundColor: \"#DAA520\",\n        color: '#FFF'\n    }\n    }\n  }));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide({open,handleClose,data}) {\n    const [itemData,setItemData] = useState()\n    const classes = useStyles()\n    useEffect(()=>{\n        if(data){\n            setItemData(data)\n        }\n    },[data])\n\n\n    return (\n        <>\n        <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            fullWidth\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n            \n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">{\"Invoice Details\"}</DialogTitle>\n            <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n                <div className=\"row dialog-upper\">\n                    <div className=\"col-md-8\">\n                        <TextField\n                            label=\"Discount Code\"\n                            type=\"text\"\n                            fullWidth\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"col-md-4\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.pay}\n                            >\n                                Apply\n                            </Button>\n                    </div>\n                    {\n                    itemData?.item &&\n                        <div className=\"order\">\n                            <div className=\"order-item\">\n                                <Typography>{itemData?.item?.Text}</Typography>\n                                <Typography>{itemData?.item?.Price}</Typography>\n                            </div>\n                        </div> \n                    }\n\n                    {\n                    itemData &&\n                        <div className=\"order\">\n                            <div className=\"order-item\">\n                                <Typography>Total</Typography>\n                                <Typography>${itemData?.totalPrice}</Typography>\n                            </div>\n                        </div> \n                    }\n\n                </div>\n\n                <div className=\"container row mt-4\">\n                    <div className=\"col-md-6\">\n                        <TextField\n                            label=\"Full Name\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <TextField\n                            label=\"Email\"\n                            type=\"email\"\n                            fullWidth\n                        />\n                    </div>\n                </div>\n                <div className=\"container row mt-4\">\n                    <div className=\"col-md-12\">\n                        <TextField\n                            label=\"Address\"\n                            fullWidth\n                            type=\"text\"\n                        />\n                    </div>\n                </div>\n                <div className=\"container row mt-4\">\n                    <div className=\"col-md-6\">\n                        <TextField\n                            label=\"City\"\n                            fullWidth\n                            type=\"text\"\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <TextField\n                            label=\"State\"\n                            fullWidth\n                            type=\"text\"\n                        />\n                    </div>\n                </div>\n                <div className=\"container row  mt-4\">\n                    <div className=\"col-md-12\">\n                        <TextField\n                            label=\"Card Number\"\n                            placeholder = \"MM/YY CVC\"\n                            type=\"tele\"\n                            fullWidth\n                        />\n                    </div>\n                </div>\n                <div className=\"container row justify-content-lg-center mt-4\">\n                    <div className=\"col-md-12\">\n                        <Button fullWidth  variant=\"contained\" color=\"secondary\">Pay</Button>\n                    </div>   \n                </div>\n            </DialogContentText>\n            </DialogContent>\n        </Dialog>\n        </>\n  );\n}","C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Admin.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Login\\Login.js",["238"],"import \"../../Styles/css/login.css\";\r\nimport Logo from \"Assets/images/logo/logo2r.png\";\r\nimport CustomTextField from \"Components/CustomTextField\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"Components/Button\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport firebase from \"FirebaseApp\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst login = ({ email, password, onSuccess, onError }) => {\r\n  firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      // Signed inas\r\n      var user = userCredential.user;\r\n\r\n      const db = firebase.database();\r\n      db.ref(`admin`)\r\n        .get()\r\n        .then((snap) => {\r\n          let finalUser = { ...user };\r\n          if (snap.val() === user.uid) {\r\n            finalUser.isAdmin = true;\r\n          }\r\n          onSuccess(finalUser);\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      onError(error);\r\n    });\r\n};\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n  const { values, errors, submitCount, handleSubmit, handleChange } = useFormik({\r\n    initialValues: { email: \"\", password: \"\" },\r\n    validationSchema: yup.object().shape({\r\n      email: yup.string().email().typeError(\"Invalid format\").required(\"Required\"),\r\n      password: yup.string().required(\"Required\"),\r\n    }),\r\n    onSubmit: (vals) => {\r\n      const onSuccess = (user) => {\r\n        setUser(user);\r\n        if (user.isAdmin) {\r\n          history.push(\"/admin\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      };\r\n      const onError = (er) => {\r\n        setError(er.message);\r\n      };\r\n      login({ ...vals, onSuccess, onError });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setError(null);\r\n  }, [submitCount]);\r\n\r\n  return (\r\n    <div className=\"position-fixed w-100 h-100 d-flex overflow-auto\" style={{ left: 0, top: 0 }}>\r\n      <div\r\n        className=\"position-absolute w-100 h-100 d-block d-sm-none\"\r\n        style={{ left: 0, top: 0, background: \"black\" }}\r\n      ></div>\r\n      <form onSubmit={handleSubmit} className=\"login-container p-5 m-auto position-relative\">\r\n        <div className=\"d-flex justify-content-center mb-5 pb-4\">\r\n          <a href=\"/\">\r\n            <img src={Logo} className=\"mx-auto\" width={198}></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"px-sm-4\">\r\n          <div className=\"mb-4\">\r\n            <CustomTextField\r\n              name=\"email\"\r\n              error={submitCount > 0 && errors[\"email\"]}\r\n              helperText={errors[\"email\"]}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              color=\"white\"\r\n            ></CustomTextField>\r\n          </div>\r\n          <div>\r\n            <CustomTextField\r\n              name=\"password\"\r\n              error={submitCount > 0 && errors[\"password\"]}\r\n              helperText={errors[\"password\"]}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              color=\"white\"\r\n            ></CustomTextField>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: 75, opacity: error ? 1 : 0 }}\r\n          className=\"d-flex align-items-end text-danger p-4\"\r\n        >\r\n          {error}\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mb-3\">\r\n          <div style={{ maxWidth: 230, width: \"100%\" }}>\r\n            <Button type=\"submit\">Login</Button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ color: \"white\", textAlign: \"center\", cursor: \"pointer\" }}\r\n          onClick={() => history.push(\"/signup\")}\r\n        >\r\n          Create account\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\rromi\\cards\\src\\Components\\Button.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Menu.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Metals.js",[],"C:\\Users\\rromi\\cards\\src\\Components\\ResourceCard.js",["239","240"],"import \"Styles/css/resourcecard.css\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Dropzone from \"Components/Dropzone\";\r\nimport { uploadImage } from \"Helper/firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst ResourceCard = ({ resource, onDelete, onUpdate, backgroundSize = \"cover\" }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const [values, setValues] = useState({ price: null, qty: null, image: null });\r\n  const [imageUploading, setImageUploading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValues(resource);\r\n    if (resource.image === \"empty\") {\r\n      setEdit(true);\r\n    }\r\n  }, [resource]);\r\n  return (\r\n    <div className=\"resource-card position-relative\">\r\n      {edit ? (\r\n        <DeleteIcon\r\n          onClick={onDelete}\r\n          className=\"position-absolute delete-icon\"\r\n          style={{ top: 10, right: 10, fontSize: 32, cursor: \"pointer\" }}\r\n          fontSize=\"inherit\"\r\n        ></DeleteIcon>\r\n      ) : null}\r\n\r\n      {imageUploading ? (\r\n        <div className=\"loader-container\">\r\n          <div>Uploading...</div>\r\n        </div>\r\n      ) : values.image === \"empty\" ? (\r\n        edit ? (\r\n          <Dropzone\r\n            files={[]}\r\n            onFiles={async (files) => {\r\n              if (files.length) {\r\n                setImageUploading(true);\r\n                const res = await uploadImage(files[0]);\r\n                setImageUploading(false);\r\n                if (!res.error) {\r\n                  setValues((prev) => ({ ...prev, image: res }));\r\n                }\r\n              }\r\n            }}\r\n          ></Dropzone>\r\n        ) : (\r\n          <div className=\"loader-container\">Empty image</div>\r\n        )\r\n      ) : (\r\n        <div\r\n          className=\"resource-img\"\r\n          style={{ backgroundImage: `url(${values.image})`, backgroundSize }}\r\n        ></div>\r\n      )}\r\n\r\n      <div className=\"flex-grow-1 d-flex align-items-center px-4 justify-content-between\">\r\n        <div className=\"mr-2\">\r\n          <div className=\"resource-prop-label\">PRICE</div>\r\n          <input\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              if (/^\\d*$/.test(val)) {\r\n                {\r\n                  setValues((prev) => ({ ...prev, price: val }));\r\n                }\r\n              }\r\n            }}\r\n            disabled={!edit}\r\n            placeholder=\"Enter\"\r\n            value={values.price !== \"empty\" ? values.price : \"\"}\r\n            type=\"text\"\r\n            className=\"resource-prop\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"mr-2\">\r\n          <div className=\"resource-prop-label\">QUANTITY</div>\r\n          <input\r\n            placeholder=\"Enter\"\r\n            disabled={!edit}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              if (/^\\d*$/.test(val)) {\r\n                {\r\n                  setValues((prev) => ({ ...prev, qty: val }));\r\n                }\r\n              }\r\n            }}\r\n            value={values.qty !== \"empty\" ? values.qty : \"\"}\r\n            className=\"resource-prop\"\r\n            type=\"text\"\r\n          ></input>\r\n        </div>\r\n        {edit ? (\r\n          <ButtonBase\r\n            className=\"resource-outlined-btn\"\r\n            onClick={() => {\r\n              onUpdate(values);\r\n              setEdit(false);\r\n            }}\r\n          >\r\n            SAVE\r\n          </ButtonBase>\r\n        ) : (\r\n          <ButtonBase className=\"resource-outlined-btn\" onClick={() => setEdit(true)}>\r\n            EDIT\r\n          </ButtonBase>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourceCard;\r\n","C:\\Users\\rromi\\cards\\src\\Views\\Signup\\Signup.js",["241"],"import \"../../Styles/css/login.css\";\r\nimport Logo from \"Assets/images/logo/logo2r.png\";\r\nimport CustomTextField from \"Components/CustomTextField\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Button from \"Components/Button\";\r\nimport firebase from \"FirebaseApp\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreateAccount = ({ email, password, onSuccess, onError }) => {\r\n  console.log(email, password);\r\n  const db = firebase.database();\r\n  firebase\r\n    .auth()\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      // Signed in\r\n\r\n      var user = userCredential.user;\r\n\r\n      db.ref(\"admin\")\r\n        .get()\r\n        .then((snap) => {\r\n          if (!snap.val()) {\r\n            db.ref()\r\n              .update({ admin: user.uid })\r\n              .then(() => {\r\n                onSuccess({ ...user, isAdmin: true });\r\n              });\r\n          } else {\r\n            onSuccess(user);\r\n          }\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Eror\", error.message);\r\n      onError(error);\r\n    });\r\n};\r\n\r\nconst Signup = ({ setUser }) => {\r\n  const history = useHistory();\r\n  const [error, setError] = useState(null);\r\n  const { values, errors, handleSubmit, handleChange, submitCount } = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: yup.object().shape({\r\n      email: yup.string().email().typeError(\"Wrong format\").required(\"Required\"),\r\n      password: yup.string().min(6, \"Minimum 6 characters\"),\r\n      confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n    }),\r\n    onSubmit: (vals) => {\r\n      const onSuccess = (user) => {\r\n        setUser(user);\r\n        if (user.isAdmin) {\r\n          history.push(\"/admin\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      };\r\n      const onError = (er) => {\r\n        setError(er.message);\r\n      };\r\n      CreateAccount({ ...vals, onSuccess, onError });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setError(null);\r\n  }, [submitCount]);\r\n\r\n  return (\r\n    <div\r\n      className=\"position-fixed w-100 h-100 d-flex overflow-auto p-4\"\r\n      style={{ left: 0, top: 0 }}\r\n    >\r\n      <div\r\n        className=\"position-absolute w-100 h-100 d-block d-sm-none\"\r\n        style={{ left: 0, top: 0, background: \"black\" }}\r\n      ></div>\r\n      <form onSubmit={handleSubmit} className=\"login-container p-5 m-auto position-relative\">\r\n        <div className=\"d-flex justify-content-center mb-5 pb-4\">\r\n          <a href=\"/\">\r\n            <img src={Logo} className=\"mx-auto\" width={198}></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"px-sm-4\">\r\n          <div className=\"mb-4\">\r\n            <CustomTextField\r\n              error={submitCount > 0 && errors[\"email\"]}\r\n              helperText={errors[\"email\"]}\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              color=\"white\"\r\n            ></CustomTextField>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <CustomTextField\r\n              error={submitCount > 0 && errors[\"password\"]}\r\n              helperText={errors[\"password\"]}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              color=\"white\"\r\n            ></CustomTextField>\r\n          </div>\r\n          <div>\r\n            <CustomTextField\r\n              error={submitCount > 0 && errors[\"confirmPassword\"]}\r\n              helperText={errors[\"confirmPassword\"]}\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm password\"\r\n              type=\"password\"\r\n              color=\"white\"\r\n            ></CustomTextField>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: 75, opacity: error ? 1 : 0 }}\r\n          className=\"d-flex align-items-end text-danger p-4\"\r\n        >\r\n          {error}\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mb-3\">\r\n          <div style={{ maxWidth: 230, width: \"100%\" }}>\r\n            <Button type=\"submit\">Sign Up</Button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ color: \"white\", textAlign: \"center\", cursor: \"pointer\" }}\r\n          onClick={() => history.push(\"/login\")}\r\n        >\r\n          Login\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\rromi\\cards\\src\\FirebaseApp\\index.js",[],"C:\\Users\\rromi\\cards\\src\\Helper\\firebase.js",[],"C:\\Users\\rromi\\cards\\src\\Components\\Dropzone.js",["242","243","244"],"import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport \"Styles/css/dropzone.css\";\r\n\r\nconst MyDropzone = ({\r\n  onFiles,\r\n  files,\r\n  accept = \"\",\r\n  multiple = false,\r\n  primary = false,\r\n  onClick = () => {},\r\n}) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    onFiles(acceptedFiles);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept,\r\n    multiple,\r\n  });\r\n\r\n  return (\r\n    <div onClick={onClick} {...getRootProps()} className=\"dropzone-container\">\r\n      <input {...getInputProps()} />\r\n      <div className=\"text-center\">\r\n        <AddPhotoIcon className=\"add-image-icon\"></AddPhotoIcon>\r\n        <div className=\"add-image-text\">DROP IMAGE HERE</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDropzone;\r\n","C:\\Users\\rromi\\cards\\src\\Components\\Confirm.js",[],"C:\\Users\\rromi\\cards\\src\\Components\\OutlinedButton.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Borders.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Discounts.js",[],"C:\\Users\\rromi\\cards\\src\\Components\\DiscountCard.js",["245"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState, useEffect } from \"react\";\r\nimport DayPicker from \"Components/DayPicker\";\r\nimport moment from \"moment\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    background: \"black\",\r\n    color: \"white\",\r\n    borderRadius: 18,\r\n    position: \"relative\",\r\n    maxWidth: \"100vw\",\r\n  },\r\n  code: {\r\n    background: \"#222222\",\r\n    borderRadius: 7,\r\n    textTransform: \"uppercase\",\r\n    fontSize: 36,\r\n    textAlign: \"center\",\r\n    padding: \"5px 20px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    color: \"white\",\r\n    width: \"100%\",\r\n\r\n    \"&:disabled\": {\r\n      background: \"transparent\",\r\n    },\r\n  },\r\n  label: {\r\n    textTransform: \"uppercase\",\r\n    color: \"#717171\",\r\n    fontSize: 12,\r\n  },\r\n\r\n  input: {\r\n    width: \"100%\",\r\n    padding: \"3px 5px\",\r\n    fontSize: \"16\",\r\n    color: \"white\",\r\n    background: \"#222222\",\r\n    borderRadius: 4,\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    \"&:disabled\": {\r\n      background: \"transparent\",\r\n      padding: 0,\r\n    },\r\n  },\r\n});\r\n\r\nconst DiscountCard = ({ discount, onUpdate, onDelete }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({ code: \"\", discount: \"\", start: \"\", end: \"\" });\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValues(discount);\r\n    if (discount.code === \"empty\") {\r\n      setEdit(true);\r\n    }\r\n  }, [discount]);\r\n\r\n  return (\r\n    <div className={classes.container + \" p-4\"}>\r\n      <div className=\"position-absolute\" style={{ top: 15, right: 15 }}>\r\n        {edit ? (\r\n          <ButtonBase\r\n            className=\"resource-outlined-btn\"\r\n            onClick={() => {\r\n              onUpdate(values);\r\n              setEdit(false);\r\n            }}\r\n          >\r\n            SAVE\r\n          </ButtonBase>\r\n        ) : (\r\n          <ButtonBase className=\"resource-outlined-btn\" onClick={() => setEdit(true)}>\r\n            EDIT\r\n          </ButtonBase>\r\n        )}\r\n      </div>\r\n      {edit ? (\r\n        <DeleteIcon\r\n          onClick={onDelete}\r\n          className=\"position-absolute delete-icon\"\r\n          style={{ top: 15, left: 15, fontSize: 28, cursor: \"pointer\" }}\r\n          fontSize=\"inherit\"\r\n        ></DeleteIcon>\r\n      ) : null}\r\n      <div className=\"pb-4 pt-4 d-flex justify-content-center\">\r\n        <input\r\n          type=\"text\"\r\n          className={classes.code}\r\n          disabled={!edit}\r\n          value={values.code === \"empty\" ? \"\" : values.code}\r\n          onChange={(e) => setValues((prev) => ({ ...prev, code: e.target.value }))}\r\n          placeholder=\"ENTER CODE\"\r\n        ></input>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <div className=\"mr-3\">\r\n          <div className={classes.label}>Discount</div>\r\n          <input\r\n            disabled={!edit}\r\n            className={classes.input}\r\n            placeholder=\"Enter\"\r\n            value={values.discount === \"empty\" ? \"\" : values.discount}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              if (/^\\d*$/.test(val)) {\r\n                {\r\n                  setValues((prev) => ({ ...prev, discount: val }));\r\n                }\r\n              }\r\n            }}\r\n            type=\"text\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"mr-3\">\r\n          <div className={classes.label}>Start date</div>\r\n          <DayPicker\r\n            disabled={!edit}\r\n            value={values.start}\r\n            setValue={(day) => setValues((prev) => ({ ...prev, start: day }))}\r\n          >\r\n            <input\r\n              disabled={!edit}\r\n              placeholder=\"Select\"\r\n              className={classes.input}\r\n              value={values.start === \"empty\" ? \"\" : moment(values.start).format(\"YYYY-MM-DD\")}\r\n              type=\"text\"\r\n            ></input>\r\n          </DayPicker>\r\n        </div>\r\n        <div>\r\n          <div className={classes.label}>End date</div>\r\n          <DayPicker\r\n            disabled={!edit}\r\n            value={values.end}\r\n            setValue={(day) => setValues((prev) => ({ ...prev, end: day }))}\r\n          >\r\n            <input\r\n              disabled={!edit}\r\n              placeholder=\"Select\"\r\n              className={classes.input}\r\n              value={values.end === \"empty\" ? \"\" : moment(values.end).format(\"YYYY-MM-DD\")}\r\n              type=\"text\"\r\n            ></input>\r\n          </DayPicker>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscountCard;\r\n","C:\\Users\\rromi\\cards\\src\\Components\\DayPicker.js",[],"C:\\Users\\rromi\\cards\\src\\Helper\\instagram.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Instagram.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Contact\\Form.js",[],"C:\\Users\\rromi\\cards\\src\\Services\\index.js",[],"C:\\Users\\rromi\\cards\\src\\Views\\Admin\\Navbar.js",[],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":1,"column":27,"nodeType":"252","messageId":"253","endLine":1,"endColumn":36},{"ruleId":"250","severity":1,"message":"254","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":10},{"ruleId":"250","severity":1,"message":"255","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":10},{"ruleId":"250","severity":1,"message":"256","line":9,"column":8,"nodeType":"252","messageId":"253","endLine":9,"endColumn":10},{"ruleId":"257","severity":1,"message":"258","line":23,"column":11,"nodeType":"259","endLine":23,"endColumn":75},{"ruleId":"257","severity":1,"message":"258","line":26,"column":11,"nodeType":"259","endLine":26,"endColumn":73},{"ruleId":"257","severity":1,"message":"258","line":29,"column":11,"nodeType":"259","endLine":29,"endColumn":68},{"ruleId":"260","severity":1,"message":"261","line":81,"column":6,"nodeType":"262","endLine":81,"endColumn":37,"suggestions":"263"},{"ruleId":"250","severity":1,"message":"251","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":26},{"ruleId":"250","severity":1,"message":"264","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":10},{"ruleId":"250","severity":1,"message":"265","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":10},{"ruleId":"266","severity":1,"message":"267","line":37,"column":9,"nodeType":"259","endLine":37,"endColumn":60},{"ruleId":"266","severity":1,"message":"267","line":80,"column":9,"nodeType":"259","endLine":80,"endColumn":66},{"ruleId":"250","severity":1,"message":"268","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":48,"column":13,"nodeType":"259","endLine":48,"endColumn":71},{"ruleId":"266","severity":1,"message":"267","line":49,"column":15,"nodeType":"259","endLine":49,"endColumn":50},{"ruleId":"250","severity":1,"message":"269","line":8,"column":18,"nodeType":"252","messageId":"253","endLine":8,"endColumn":25},{"ruleId":"250","severity":1,"message":"270","line":8,"column":27,"nodeType":"252","messageId":"253","endLine":8,"endColumn":32},{"ruleId":"260","severity":1,"message":"271","line":24,"column":6,"nodeType":"262","endLine":24,"endColumn":33,"suggestions":"272"},{"ruleId":"250","severity":1,"message":"273","line":4,"column":21,"nodeType":"252","messageId":"253","endLine":4,"endColumn":31},{"ruleId":"260","severity":1,"message":"274","line":32,"column":7,"nodeType":"262","endLine":32,"endColumn":34,"suggestions":"275"},{"ruleId":"276","severity":1,"message":"277","line":32,"column":7,"nodeType":"262","messageId":"278","endLine":32,"endColumn":34},{"ruleId":"260","severity":1,"message":"279","line":38,"column":7,"nodeType":"262","endLine":38,"endColumn":35,"suggestions":"280"},{"ruleId":"276","severity":1,"message":"277","line":38,"column":7,"nodeType":"262","messageId":"278","endLine":38,"endColumn":35},{"ruleId":"250","severity":1,"message":"264","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":10},{"ruleId":"250","severity":1,"message":"265","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":10},{"ruleId":"250","severity":1,"message":"269","line":10,"column":18,"nodeType":"252","messageId":"253","endLine":10,"endColumn":25},{"ruleId":"250","severity":1,"message":"270","line":10,"column":27,"nodeType":"252","messageId":"253","endLine":10,"endColumn":32},{"ruleId":"260","severity":1,"message":"261","line":25,"column":6,"nodeType":"262","endLine":25,"endColumn":35,"suggestions":"281"},{"ruleId":"276","severity":1,"message":"277","line":25,"column":6,"nodeType":"262","messageId":"278","endLine":25,"endColumn":35},{"ruleId":"266","severity":1,"message":"267","line":44,"column":13,"nodeType":"259","endLine":44,"endColumn":68},{"ruleId":"260","severity":1,"message":"261","line":35,"column":7,"nodeType":"262","endLine":35,"endColumn":23,"suggestions":"282"},{"ruleId":"250","severity":1,"message":"283","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":73,"column":13,"nodeType":"259","endLine":73,"endColumn":61},{"ruleId":"284","severity":1,"message":"285","line":66,"column":17,"nodeType":"286","messageId":"287","endLine":68,"endColumn":18},{"ruleId":"284","severity":1,"message":"285","line":86,"column":17,"nodeType":"286","messageId":"287","endLine":88,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":88,"column":13,"nodeType":"259","endLine":88,"endColumn":61},{"ruleId":"250","severity":1,"message":"288","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":18},{"ruleId":"260","severity":1,"message":"289","line":17,"column":6,"nodeType":"262","endLine":17,"endColumn":8,"suggestions":"290"},{"ruleId":"250","severity":1,"message":"291","line":18,"column":40,"nodeType":"252","messageId":"253","endLine":18,"endColumn":52},{"ruleId":"284","severity":1,"message":"285","line":114,"column":17,"nodeType":"286","messageId":"287","endLine":116,"endColumn":18},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'M1' is defined but never used.","'M3' is defined but never used.","'M4' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getValue'. Either include it or remove the dependency array. If 'getValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["294"],"'B1' is defined but never used.","'B2' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getBackground'. Either include it or remove the dependency array. If 'getBackground' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["295"],"'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'getOptionsType'. Either include it or remove the dependency array. If 'getOptionsType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["296"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array. If 'getOptions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["297"],["298"],["299"],"'DialogActions' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'ButtonBase' is defined but never used.","React Hook useCallback has a missing dependency: 'onFiles'. Either include it or remove the dependency array. If 'onFiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["300"],"'isDragActive' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [controlValue, getValue, setControlValue]",{"range":"315","text":"316"},"Update the dependencies array to be: [getBackground, groupValue, setGroupValue]",{"range":"317","text":"318"},"Update the dependencies array to be: [getOptionsType, groupValue, setGroupValue]",{"range":"319","text":"320"},"Update the dependencies array to be: [getOptions, groupValue, setGroupValue]",{"range":"321","text":"322"},"Update the dependencies array to be: [getValue, groupValue, setGroupValue]",{"range":"323","text":"324"},"Update the dependencies array to be: [state, setState, getValue]",{"range":"325","text":"326"},"Update the dependencies array to be: [onFiles]",{"range":"327","text":"328"},[2171,2202],"[controlValue, getValue, setControlValue]",[718,745],"[getBackground, groupValue, setGroupValue]",[822,849],"[getOptionsType, groupValue, setGroupValue]",[947,975],"[getOptions, groupValue, setGroupValue]",[764,793],"[getValue, groupValue, setGroupValue]",[992,1008],"[state, setState, getValue]",[470,472],"[onFiles]"]